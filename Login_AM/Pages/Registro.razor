@page "/registro"
@using Login_AM.Models;
@using System.Net.Http.Json;
@using System.Text.Json;
<h3>Registro</h3>
<EditForm Model="@registro_Model" OnValidSubmit="Submit">
    <div class="form-group">
        <label>Nombre</label>
        <input type="text" @bind-value="registro_Model.Nombre" class=" form-control" placeholder="Introduce tu nombre" />
    </div>
    <div class="mt-2 form-group">
        <label>Primer Apellido</label>
        <input type="text" @bind-value="registro_Model.PApellido" class="form-control" placeholder="Introduce tu primer apellido" />
    </div>
    <div class="mt-2 form-group">
        <label>Segundo Apellido</label>
        <input type="text" @bind-value="registro_Model.SApellido" class="form-control" placeholder="Introduce tu segundo apellido" />
    </div>
    <div class="mt-2 form-group">
        <label>Teléfono</label>
        <input type="text" @bind-value="registro_Model.Telefono" class="form-control" placeholder="Introduce tu teléfono" />
    </div>
    <div class="mt-2 form-group">
        <label>Email</label>
        <input type="email" @bind-value="registro_Model.Email" class="form-control" placeholder="Introduce tu email" />
    </div>
    <div class="mt-2 form-group">
        <label>Contraseña</label>
        <input type="password" @bind-value="registro_Model.Password" class="form-control" placeholder="Introduce tu contraseña" />
    </div>
    <div class="mt-2 form-group">
        <label>Repite Contraseña</label>
        <input type="password" class="form-control" placeholder="Introduce tu contraseña de nuevo" />
    </div>
    <div class="text-center mt-2">
        <button class="btn btn-primary" type="submit">
            <span class="@spinnerclass" role="status" aria-hidden="true"></span>
            Registrar</button>
    </div>
    <div >
        <NavLink class="btn btn-primary" href="/">
            <button>Volver</button>
        </NavLink>
    </div>
    
</EditForm>
@code {
    Registro_Model registro_Model = new();
    private readonly HttpClient _httpClient = new HttpClient();
    private string spinnerclass = "";
    private async void Submit()
    {
        spinnerclass = "spinner-border spinner-border-sm";
        await Task.Delay(500);
        spinnerclass = "";
        this.StateHasChanged();
        await Registrer_User(registro_Model.Nombre, registro_Model.PApellido, registro_Model.SApellido, registro_Model.Telefono, registro_Model.Email, registro_Model.Password);

    }
    private async Task Registrer_User(string firstname, string lastname1, string lastname2, string phonenumber, string email, string password)
    {
        try
        {
            string BaseAddress =
            DeviceInfo.Platform == DevicePlatform.Android ? "https://10.0.2.2:7083" : "https://localhost:7083";
            string TodoItemsUrl = $"{BaseAddress}/api/";
            _httpClient.BaseAddress = new Uri(TodoItemsUrl);
            var userParams = new UserRegister(0,firstname, lastname1, lastname2, phonenumber, email, password);
            var result = await GetUserParametersAsync(userParams);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
    private async Task<String> GetUserParametersAsync(UserRegister userParams)
    {
        var response = await _httpClient.PostAsJsonAsync("Auth/register", userParams);

        
            return await response.Content.ReadAsStringAsync();
        
    }
}
